//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/TabletopRTS/Scripts/InputSystem/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace TabletopRTS.InputSystem
{
    public partial class @InputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""GameplayActions"",
            ""id"": ""8998e742-94c3-41c3-b8f3-2ff03aa5b58b"",
            ""actions"": [
                {
                    ""name"": ""SelectSingleObject"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e94fea9d-6d4e-4309-8d8f-6e24507299e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCamera"",
                    ""type"": ""Value"",
                    ""id"": ""d1413d49-678e-48a5-ad49-5ad9db3741fc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomCamera"",
                    ""type"": ""Value"",
                    ""id"": ""837a6266-e0d9-4587-95fb-032e88da1c34"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""17431338-43e4-4b3c-9bb9-663202a3e036"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DragCamera"",
                    ""type"": ""Button"",
                    ""id"": ""ff43965d-e9ed-425c-9aa3-071e7b042318"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.01)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2a909e49-db61-4156-b1f8-0baca3c59dbd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSingleObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd39a040-e5bc-435a-9415-f9fa23d48425"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSingleObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""dfeda509-dd79-46df-af34-55be02ad9be1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""46e10a42-f4db-438e-9c3c-497438e062d4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""331f0f90-a538-49b0-acaf-b5542169bfeb"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7a53cfd3-0cee-41fe-b2c6-d7f963685fb4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4c578cf8-6053-47bc-9773-6ee0647418dd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""36092d1f-4f19-4c28-8b4f-669da0e03db6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3765665d-db69-42f0-8857-008005347ece"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c04a7835-a057-4019-84f1-a5b3ba53d996"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""24c220ae-a86a-415a-9fe3-d79848392e13"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a59be238-5ad2-474b-bf72-8c60db4f94bc"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9ebf4ab9-2726-43cc-9e01-419f90b89248"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c5c9f22-d8f4-4ec2-8a68-24e8c869e7a8"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""37c91198-d26f-4884-b5d4-a69ffc60e058"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8e89db75-463f-4c59-bb54-c4251f63f21c"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ae445129-1199-41a4-a426-0aa6ae0c1069"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5568baae-2a0b-4c5e-aeb6-ca089e16d665"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f0457726-dd74-4404-9a9a-2a7a0dc3f134"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""68417bfe-23b1-43cc-a5e6-b530bb44d2be"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cad6528b-43af-466b-a5b0-dd3dd3622f06"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuActions"",
            ""id"": ""7de869c2-f41f-421c-b4b6-0042e8faba69"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""c06fcc99-0f00-475f-9e76-144556d909c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a255d3ad-ff59-4fce-bade-e1bacb6b8a94"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // GameplayActions
            m_GameplayActions = asset.FindActionMap("GameplayActions", throwIfNotFound: true);
            m_GameplayActions_SelectSingleObject = m_GameplayActions.FindAction("SelectSingleObject", throwIfNotFound: true);
            m_GameplayActions_MoveCamera = m_GameplayActions.FindAction("MoveCamera", throwIfNotFound: true);
            m_GameplayActions_ZoomCamera = m_GameplayActions.FindAction("ZoomCamera", throwIfNotFound: true);
            m_GameplayActions_MousePosition = m_GameplayActions.FindAction("MousePosition", throwIfNotFound: true);
            m_GameplayActions_DragCamera = m_GameplayActions.FindAction("DragCamera", throwIfNotFound: true);
            // MenuActions
            m_MenuActions = asset.FindActionMap("MenuActions", throwIfNotFound: true);
            m_MenuActions_Newaction = m_MenuActions.FindAction("New action", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GameplayActions
        private readonly InputActionMap m_GameplayActions;
        private List<IGameplayActionsActions> m_GameplayActionsActionsCallbackInterfaces = new List<IGameplayActionsActions>();
        private readonly InputAction m_GameplayActions_SelectSingleObject;
        private readonly InputAction m_GameplayActions_MoveCamera;
        private readonly InputAction m_GameplayActions_ZoomCamera;
        private readonly InputAction m_GameplayActions_MousePosition;
        private readonly InputAction m_GameplayActions_DragCamera;
        public struct GameplayActionsActions
        {
            private @InputActions m_Wrapper;
            public GameplayActionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @SelectSingleObject => m_Wrapper.m_GameplayActions_SelectSingleObject;
            public InputAction @MoveCamera => m_Wrapper.m_GameplayActions_MoveCamera;
            public InputAction @ZoomCamera => m_Wrapper.m_GameplayActions_ZoomCamera;
            public InputAction @MousePosition => m_Wrapper.m_GameplayActions_MousePosition;
            public InputAction @DragCamera => m_Wrapper.m_GameplayActions_DragCamera;
            public InputActionMap Get() { return m_Wrapper.m_GameplayActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GameplayActionsActions set) { return set.Get(); }
            public void AddCallbacks(IGameplayActionsActions instance)
            {
                if (instance == null || m_Wrapper.m_GameplayActionsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GameplayActionsActionsCallbackInterfaces.Add(instance);
                @SelectSingleObject.started += instance.OnSelectSingleObject;
                @SelectSingleObject.performed += instance.OnSelectSingleObject;
                @SelectSingleObject.canceled += instance.OnSelectSingleObject;
                @MoveCamera.started += instance.OnMoveCamera;
                @MoveCamera.performed += instance.OnMoveCamera;
                @MoveCamera.canceled += instance.OnMoveCamera;
                @ZoomCamera.started += instance.OnZoomCamera;
                @ZoomCamera.performed += instance.OnZoomCamera;
                @ZoomCamera.canceled += instance.OnZoomCamera;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @DragCamera.started += instance.OnDragCamera;
                @DragCamera.performed += instance.OnDragCamera;
                @DragCamera.canceled += instance.OnDragCamera;
            }

            private void UnregisterCallbacks(IGameplayActionsActions instance)
            {
                @SelectSingleObject.started -= instance.OnSelectSingleObject;
                @SelectSingleObject.performed -= instance.OnSelectSingleObject;
                @SelectSingleObject.canceled -= instance.OnSelectSingleObject;
                @MoveCamera.started -= instance.OnMoveCamera;
                @MoveCamera.performed -= instance.OnMoveCamera;
                @MoveCamera.canceled -= instance.OnMoveCamera;
                @ZoomCamera.started -= instance.OnZoomCamera;
                @ZoomCamera.performed -= instance.OnZoomCamera;
                @ZoomCamera.canceled -= instance.OnZoomCamera;
                @MousePosition.started -= instance.OnMousePosition;
                @MousePosition.performed -= instance.OnMousePosition;
                @MousePosition.canceled -= instance.OnMousePosition;
                @DragCamera.started -= instance.OnDragCamera;
                @DragCamera.performed -= instance.OnDragCamera;
                @DragCamera.canceled -= instance.OnDragCamera;
            }

            public void RemoveCallbacks(IGameplayActionsActions instance)
            {
                if (m_Wrapper.m_GameplayActionsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGameplayActionsActions instance)
            {
                foreach (var item in m_Wrapper.m_GameplayActionsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GameplayActionsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GameplayActionsActions @GameplayActions => new GameplayActionsActions(this);

        // MenuActions
        private readonly InputActionMap m_MenuActions;
        private List<IMenuActionsActions> m_MenuActionsActionsCallbackInterfaces = new List<IMenuActionsActions>();
        private readonly InputAction m_MenuActions_Newaction;
        public struct MenuActionsActions
        {
            private @InputActions m_Wrapper;
            public MenuActionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Newaction => m_Wrapper.m_MenuActions_Newaction;
            public InputActionMap Get() { return m_Wrapper.m_MenuActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MenuActionsActions set) { return set.Get(); }
            public void AddCallbacks(IMenuActionsActions instance)
            {
                if (instance == null || m_Wrapper.m_MenuActionsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MenuActionsActionsCallbackInterfaces.Add(instance);
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }

            private void UnregisterCallbacks(IMenuActionsActions instance)
            {
                @Newaction.started -= instance.OnNewaction;
                @Newaction.performed -= instance.OnNewaction;
                @Newaction.canceled -= instance.OnNewaction;
            }

            public void RemoveCallbacks(IMenuActionsActions instance)
            {
                if (m_Wrapper.m_MenuActionsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMenuActionsActions instance)
            {
                foreach (var item in m_Wrapper.m_MenuActionsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MenuActionsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MenuActionsActions @MenuActions => new MenuActionsActions(this);
        public interface IGameplayActionsActions
        {
            void OnSelectSingleObject(InputAction.CallbackContext context);
            void OnMoveCamera(InputAction.CallbackContext context);
            void OnZoomCamera(InputAction.CallbackContext context);
            void OnMousePosition(InputAction.CallbackContext context);
            void OnDragCamera(InputAction.CallbackContext context);
        }
        public interface IMenuActionsActions
        {
            void OnNewaction(InputAction.CallbackContext context);
        }
    }
}
